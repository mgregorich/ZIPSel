---
title: 'Mosaiques for ISCB44'
author:
  - name: "Mariella Gregorich"
    affiliation: "Medical University of Vienna, Center for Medical Data Science"
date: last-modified
categories: [2023, ZIPSel, variable selection, R]
description: "Classification: confidential"
editor: visual
theme: cosmo
toc: true  
number-sections: true
colorlinks: true
highlight-style: pygments
format:
  html: 
    code-fold: true
    code-tools: true
    html-math-method: katex
    self-contained: true
---

# Preliminaries

```{r}
rm(list = ls())

pacman::p_load(ggplot2, parallel, future.apply, stringr, 
               dplyr, tidyverse, tableone, concreg, gt,
               glmnet, patchwork, ranger, tuneRanger, RColorBrewer, ggvenn)

source(here::here("src","functions_aux.R"))
cols_models <- c("#D55E00", "#E69F00", "#56B4E9", "#0072B2", "#009E73", "#CC79A7")

```

# Data

```{r}
list_results <- readRDS(here::here("output", "example", "results_mosaique_all_nR10_ncv10_nl100.rds"))


tbl_perf <- list_results$performance %>%
  mutate(model = fct_relevel(model, c("lasso", "ridge", "lasso-ridge", "ridge-lasso", "ridge-garrote","random forest")),
         model_pen = paste0(model,"_", penalty),
         penalty = fct_relevel(penalty, c("x", "ud", "without tuning", "with tuning")),
         propz = paste0(propz *100,"%")) %>%
  rename(variants = penalty)
tbl_perfcv <- list_results$performance_ncv %>%
  mutate(model = fct_relevel(model, c("lasso", "ridge", "lasso-ridge", "ridge-lasso", "ridge-garrote", "random forest")))
```

# Results

## Number of selected variables

```{r}
p_npeps <- tbl_perf %>%
  filter((variants != "x" | model %in% "lasso" ) & variants != "without tuning") %>%
  mutate(data_transformation = ifelse(variants %in% c(" with tuning", "with tuning"), "orginal data", toupper(variants))) %>%
  ggplot(.,aes(x=propz, y =df, group=model_pen, col=model)) +
  geom_point() +
  #scale_linetype_manual("Data transformation",values = c(3,1,2)) +
  scale_x_discrete("Maximum percentage of zero-inflation") +
  scale_y_continuous("Number of selected peptides", breaks=seq(0,1500,250)) +
  scale_color_manual("Method", values = cols_models) +
  geom_line() +
  theme_bw() + 
  guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
p_npeps
ggsave(file = paste0(here::here("output", "example", "fig_mos_df.tiff")),
       width=1.75*100, height=1*100, units="mm", dpi=350, compression = "lzw")
```

## R2

::: panel-tabset
### all methods

```{r}
tbl_perf %>%
    filter( !(model %in% "random forest" & variants %in% "without tuning")) %>%
  mutate(data_transformation = ifelse(variants %in% "with tuning", "orginal data", toupper(variants))) %>%
  ggplot(.,aes(x=propz, y =R2, group=model_pen, col=model, linetype=data_transformation)) +
  geom_point() +
  scale_x_discrete("Maximum percentage of zero-inflation") +
  scale_y_continuous("R2") +
  scale_color_manual("Method", values = cols_models) +
  scale_linetype_manual("Data transformation", values = c(3,1,2)) +
  geom_line() +
  theme_bw() + 
  guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
ggsave(file = paste0(here::here("output", "example", "fig_mos_r2_all.tiff")),
       width=1.75*100, height=1*100, units="mm", dpi=350, compression = "lzw")
```

### with component split only

```{r}
tbl_perf %>%
    filter((variants != "x" | model %in% "lasso" ) & variants != "without tuning") %>%
  mutate(data_transformation = ifelse(variants %in% "with tuning", "orginal data", toupper(variants))) %>%
  ggplot(.,aes(x=propz, y =R2, group=model_pen, col=model)) +
  geom_point() +
  scale_x_discrete("Maximum percentage of zero-inflation") +
  scale_y_continuous("R2") +
  scale_color_manual("Method", values = cols_models) +
  geom_line() +
  theme_bw() + 
  guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
ggsave(file = paste0(here::here("output", "example", "fig_mos_r2_ud.tiff")),
       width=1.75*100, height=1*100, units="mm", dpi=350, compression = "lzw")
```
:::

## RMSPE

::: panel-tabset
### all methods

```{r}
tbl_perf %>%
  filter( !model %in% c("lasso","random forest")) %>%
  mutate(data_transformation = ifelse(variants %in% "with tuning", "orginal data", toupper(variants)),
         data_transformation = ifelse(data_transformation=="UD", "Strategy A: component variables", "Strategy B: imputation of PMVs")) %>%
  ggplot(.,aes(x=propz, y =RMSPE, group=model_pen, col=model, linetype=data_transformation)) +
  scale_x_discrete("Maximum percentage of zero-inflation") +
  scale_y_continuous("RMSPE") +
  scale_color_manual("Method", values = cols_models[-c(1,6)]) +
  scale_linetype_manual("",values = c(1,2)) +
  geom_point() +
  geom_line() +
  facet_grid(model~.) +
  theme_bw() + guides(color="none") + theme(legend.position = "top")
ggsave(file = paste0(here::here("output", "example", "fig_mos_rmspe_all.tiff")),
       width=1.5*100, height=1.25*100, units="mm", dpi=350, compression = "lzw")
```

### with component split only

```{r}
p_rmspe_ud <- tbl_perf %>%
  filter((variants != "x" | model %in% "lasso" ) & variants != "without tuning") %>%
  mutate(data_transformation = ifelse(variants %in% "with tuning", "orginal data", toupper(variants))) %>%
  ggplot(.,aes(x=propz, y =RMSPE, group=model_pen, col=model)) +
  scale_x_discrete("Maximum percentage of zero-inflation") +
  scale_y_continuous("RMSPE") +
  scale_color_manual("Method", values = cols_models) +
  geom_point() +
  geom_line() +
  theme_bw() + 
  guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
p_rmspe_ud
ggsave(file = paste0(here::here("output", "example", "fig_mos_rmspe_ud.tiff")),
       width=1.75*100, height=1*100, units="mm", dpi=350, compression = "lzw")
```
:::

```{r}
(p_rmspe_ud + p_npeps ) + plot_annotation(tag_levels = 'A') + plot_layout(guides = "collect") & 
  theme(legend.position = 'right')
ggsave(file = paste0(here::here("output", "example", "fig_mos_rmspe_ud_neps.tiff")),
       width=2.5*100, height=1*100, units="mm", dpi=350, compression = "lzw")
```

## Calibration slope

```{r}
tbl_perf %>%
  filter((variants != "x" | model %in% "lasso" ) & variants != "without tuning") %>%
  mutate(data_transformation = ifelse(variants %in% "with tuning", "orginal data", toupper(variants))) %>%
  ggplot(.,aes(x=propz, y =CS, group=model_pen, col=model)) +
  scale_x_discrete("Maximum percentage of zero-inflation") +
  scale_y_continuous("Calibration slope") +
  geom_hline(yintercept = 1, linetype="dashed") +
  scale_color_manual("Method", values = cols_models) +
  geom_point() +
  geom_line() +
  theme_bw() + 
  guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
ggsave(file = paste0(here::here("output", "example", "fig_mos_cs_all.tiff")),
       width=1.75*100, height=1*100, units="mm", dpi=350, compression = "lzw")
```

## Run time

```{r}
tbl_perf %>%
  filter((variants != "x" | model %in% "lasso" ) & variants != "without tuning") %>%
  mutate(data_transformation = ifelse(variants %in% "with tuning", "orginal data", toupper(variants)),
         extime = log(extime)) %>%
  ggplot(.,aes(x=propz, y =extime, group=model_pen, col=model)) +
  scale_x_discrete("Maximum percentage of zero-inflation") +
  scale_y_continuous("Logarithm of execution time (in seconds)") +
  scale_color_manual("Method", values = cols_models) +
  geom_point() +
  geom_line() +
  theme_bw() + 
  guides(colour = guide_legend(order = 1), linetype = guide_legend(order = 2))
ggsave(file = paste0(here::here("output", "example", "fig_mos_runtime_all.tiff")),
       width=1.75*100, height=1*100, units="mm", dpi=350, compression = "lzw")
```
